#!env python

from pwn import *


def setup(program: str, debug: bool = True, use_libc: bool = True, use_ld: bool = True) -> process:
    from os.path import join, dirname, isfile
    from glob import iglob

    program = join(dirname(__file__), program)
    pdir = dirname(program)
    command = [program]
    env = {}

    if use_ld:
        pattern = join(pdir, '**/ld.so*')
        ld = [i for i in iglob(pattern, recursive=True) if isfile(i)]

        if len(ld) >= 1:
            command = [ld[0], command]

    if use_libc:
        pattern = join(pdir, '**/libc.so*')
        libc = [i for i in iglob(pattern, recursive=True) if isfile(i)]

        if len(libc) >= 1:
            if use_ld:
                env['LD_LIBRARY_PATH'] = dirname(libc[0])
            else:
                env['LD_PRELOAD'] = libc[0]

    if debug:
        command = ['setarch', '-R', *command]

    return process(command, env=env)


GDBSCRIPT = None


def debug(p: process):
    gdb.attach(p, gdbscript=GDBSCRIPT)
    breakpoint()


#######################################################################
PROGRAM = ''
SERVER = ('', 80)

context.binary = PROGRAM
context.log_level = 'debug'

con = setup(PROGRAM)
# con = gdb.debug(COMMAND, env=ENV, aslr=False, gdbscript=GDBSCRIPT)
# con = remote(*SERVER)

con.interactive()
